apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    app: "{{ .Chart.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
    spec:
      hostNetwork: {{ .Values.service.hostNetwork }}
      volumes:
      - name: valheim-data
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-pvc-data"
      - name: valheim-backup
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-pvc-backup"
      containers:
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: backupsToKeep
          value: "{{ .Values.env.backupsToKeep }}"
        - name: basePort
          value: "{{ .Values.env.basePort }}"
        - name: defaultSeed
          value: "{{ .Values.env.defaultSeed }}"
        - name: gameDNS
          value: "{{ .Values.env.gameDNS }}"
        - name: phvalheimHost
          value: "{{ .Values.env.phvalheimHost }}"
        - name: phvalheimClientURL
          value: "{{ .Values.env.phvalheimClientURL }}"
        - name: steamAPIKey
          value: "{{ .Values.env.steamAPIKey }}"
        volumeMounts:
        - name: valheim-data
          mountPath: /opt/stateful
        - name: valheim-backup
          mountPath: /opt/stateful/backups
        ports:
        - name: web-port
          containerPort: {{ .Values.env.webPort | int }}
          hostIP: {{ .Values.env.hostIP }}
          hostPort: {{ .Values.env.webPort | int }}
          protocol: TCP
        - name: admin-port
          containerPort: {{ .Values.env.adminPort | int }}
          hostIP: {{ .Values.env.hostIP }}
          hostPort: {{ .Values.env.adminPort | int }}
          protocol: TCP
        - name: worlds-25000
          containerPort: 25000
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25000
          protocol: UDP
        - name: worlds-25001
          containerPort: 25001
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25001
          protocol: UDP
        - name: worlds-25002
          containerPort: 25002
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25002
          protocol: UDP
        - name: worlds-25003
          containerPort: 25003
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25003
          protocol: UDP
        - name: worlds-25004
          containerPort: 25004
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25004
          protocol: UDP
        - name: worlds-25005
          containerPort: 25005
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25005
          protocol: UDP
        - name: worlds-25006
          containerPort: 25006
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25006
          protocol: UDP
        - name: worlds-25007
          containerPort: 25007
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25007
          protocol: UDP
        - name: worlds-25008
          containerPort: 25008
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25008
          protocol: UDP
        - name: worlds-25009
          containerPort: 25009
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25009
          protocol: UDP
        - name: worlds-25010
          containerPort: 25010
          hostIP: {{ .Values.env.hostIP }}
          hostPort: 25010
          protocol: UDP
